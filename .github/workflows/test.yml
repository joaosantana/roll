name: Test

on:
  push:
    branches:
      - $default-branch
      - development
      - master
  # Run tests for any PRs
  pull_request:
  workflow_dispatch:

jobs:
  macos:
    name: Running tests on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-10.15
    runs-on: ${{ matrix.os }}
    steps:

      - name: Install autoconf
        run: |
          port install autoconf

      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run the tests
        run:  |
          uname -a \
          && ./regen.sh
          && ./configure
          && make check

  linux:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: Running tests on ${{ matrix.distro }}
    strategy:
      fail-fast: false
      matrix:
        distro:
          - 'debian:9'
          - 'debian:10'
          - 'debian:testing'
          - 'ubuntu:16.04'
          - 'ubuntu:18.04'
          - 'ubuntu:20.04'
          - 'ubuntu:20.10'
          - 'alpine:3.13'
          - 'alpine:edge'
          - 'centos:7'
          - 'centos:8'
          - 'fedora:32'
          - 'fedora:33'
          - 'fedora:34'
        include:
          - distro: 'debian:testing'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'debian:10'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'debian:9'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'ubuntu:20.10'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'ubuntu:16.04'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'ubuntu:18.04'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'ubuntu:20.04'
            pre: >-
              apt-get update &&
              DEBIAN_FRONTEND=noninteractive apt-get -y autoconf
          - distro: 'alpine:edge'
            pre: >-
              apk update &&
              apk upgrade &&
              apk add -U bash &&
              apk add autoconf
          - distro: 'alpine:3.13'
            pre: >-
              apk update &&
              apk upgrade &&
              apk add -U bash &&
              apk add autoconf
          - distro: 'fedora:34'
            pre: >-
              dnf upgrade -y &&
              dnf install -y hostname &&
              dnf install -y autoconf
          - distro: 'fedora:33'
            pre: >-
              dnf upgrade -y &&
              dnf install -y hostname &&
              dnf install -y autoconf
          - distro: 'fedora:32'
            pre: >-
              dnf upgrade -y &&
              dnf install -y hostname &&
              dnf install -y autoconf
          - distro: 'centos:7'
            pre: >-
              yum upgrade -y &&
              yum install -y autoconf
          - distro: 'centos:8'
            pre: >-
              dnf upgrade -y &&
              dnf install -y autoconf
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Run the tests on ${{ matrix.distro }}
        env:
          PRE: ${{ matrix.pre }}
        run: |
          echo $PRE > ./prep-cmd.sh
          docker run --network host -w /roll -v ${PWD}:/roll ${{ matrix.distro }} \
              /bin/sh -c 'sh ./prep-cmd.sh \
              && uname -a \
              && ./regen.sh \
              && ./configure \
              && make check'

  rpm:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: Running RPM tests on ${{ matrix.distro }}
    strategy:
      fail-fast: false
      matrix:
        distro:
          - 'centos:7'
          - 'centos:8'
          - 'fedora:32'
          - 'fedora:33'
          - 'fedora:34'
        include:
          - distro: 'fedora:34'
            pre: >-
              dnf install -y autoconf rpm-build
          - distro: 'fedora:33'
            pre: >-
              dnf install -y autoconf rpm-build
          - distro: 'fedora:32'
            pre: >-
              dnf install -y autoconf rpm-build
          - distro: 'centos:7'
            pre: >-
              yum install -y autoconf rpm-build
          - distro: 'centos:8'
            pre: >-
              dnf install -y autoconf rpm-build
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build the RPM on ${{ matrix.distro }}
        env:
          PRE: ${{ matrix.pre }}
        run: |
          echo $PRE > ./prep-cmd.sh
          docker run --network host -w /roll -v ${PWD}:/roll ${{ matrix.distro }} \
              /bin/sh -c 'sh ./prep-cmd.sh \
              && uname -a \
              && make rpm'
